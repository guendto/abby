
About
-----

abby is a front-end for cclive and clive which are used to
download videos from Youtube and other similar video hosts.

abby is written in C++ and depends on the Qt framework.

    http://abby.googlecode.com/


Configuration
-------------

* abby will require path to either cclive or clive command

* The path is detected from the $PATH by default

* If the above fails, you are required to enter it manually by opening
the program preferences (Edit / Preferences or ctrl-e).

* Use the "Verify" button to verify the path to c/clive

* abby uses Qt's QSettings class for storing the program settings
  - on Linux/FreeBSD these settings are typically found under .config/abby/
  - the location may vary for each platform, refer to the Qt documentation


The essentials to get started with abby
---------------------------------------

If you have not configured abby already, then see the "Configuration"
section above.

* You can add video page links by:

  - Hitting the "+" button

  - Dropping them onto the window

  - Pasting them from the system clipboard

  - Parsing RSS feeds (covered further below)

  - Scanning video pages (covered further below)

  - Importing them from files

* Each time a new link is added to the list

  - abby verifies that the c/clive supports the website

  - abby ignores any duplicate links

* Start the download by hitting the download button (or ctrl+d)


Parsing RSS feeds
-----------------

You can access this feature by clicking the button with the RSS icon
on it or by hitting ctrl+r. Some websites like youtube.com and
video.google.com provide RSS feeds that can be parsed in abby.

Example:
  http://gdata.youtube.com/feeds/base/users/communitychannel/uploads?alt=rss

Once the RSS dialog is open, you can add RSS feed links to the top list.
As with the main window's video page link list (or download list), hit
the "+" button, paste a link from the clipboard or drop links onto the
dialog.

It's also worth noting that you can access the "Feed manager" by hitting
the "Feeds..." button. The manager can be used to save frequently visited
RSS feeds.

Hit "Fetch" to continue. Once the parsing is complete, a list of found
items are displayed in the bottom list, each feed item under appropriate
feed channel.

Check each item you want to add to the download list and hit "OK".


Scanning for video page links
-----------------------------

The scan feature originates from the early days of clive and the clivescan
program. It can be used to scan for "regular" Youtube video page links or
embedded ones. The found links can then be added to the download list in
the main window and downloaded.

You can access the scan dialog by hitting either the scan button in the
main window. Ctrl-s also opens the same dialog.

Once the dialog is open, enter the URL you want to scan for video page
links. For example: http://youtube.com

If the "Fetch video title" is checked, abby will perform the scan in two
steps:

  1) First fetches the content from specified link and scans it for
     video page links

  2) It then visits (fetches and parses) each found link for the page title

Hit the "Scan" button to start the scan process. Depending on the "Fetch
video title" state, abby will either add the parsed video page title or
the link itself to the list.

Once the process is complete, you can check each video from the list
and hit "OK" to add them to the download list.

To those wondering if you can use this feature to scan Youtube playlists,
the answer is yes. Note however that you have to scan each page manually
because abby is currently unable go over the playlist pages automatically.


Misc. notes
-----------

* abby supports keyboard shortcuts. These are visible in the menus. For example,
Alt+A would open the "Add link" dialog.

* You can edit list items by double clicking them. This applies to all windows
and dialogs with list widgets.

* You can paste multiple links by separating each link with a newline

* Export saves all of the items in the list to a specified text file.
Each link is separated with a newline.

* Import parses text files line by line and expects each link to be
separated with a newline.

* Because c/clive parses input in a similar fashion, you can use the
exported exported lists with c/clive, e.g.: cclive < exported.list


